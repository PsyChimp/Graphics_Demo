#version 150
in vec3 a_position;
in vec2 a_texcoord;
in vec3 a_normal;
in vec3 a_offset;

out vec2 v_texcoord;
out vec3 v_normal;
out vec3 v_worldPos;
out float index;
uniform mat4 rotMatrix;
uniform mat4 worldMatrix;
uniform mat4 projMatrix;
uniform mat4 viewMatrix;
uniform float bboard;
uniform vec2 bbsize;
void main(){
	if(bboard==0.0){
		//normal stuff
		vec4 p = vec4(a_position,1.0);
		p = p * worldMatrix;
		v_worldPos=p.xyz;
		p = p * viewMatrix;
		p = p * projMatrix;
		gl_Position = p;
		v_texcoord = a_texcoord;
		v_normal = (vec4(a_normal,0.0)*worldMatrix).xyz;
	}
	if (bboard==0.5){
		//insantced bricks
		vec4 p = vec4(a_position,1.0);
		p.xyz+=a_offset;
		v_worldPos=p.xyz;
		p = p * viewMatrix;
		p = p * projMatrix;
		gl_Position = p;
		v_texcoord = a_texcoord;
		v_normal = (vec4(a_normal,0.0)*worldMatrix).xyz;
		index=gl_InstanceID;
	}
	if(bboard==1.0){
		//billboards
		vec4 p = vec4(0,0,0,1.0);
		p.xyz+=a_offset;
		v_worldPos=p.xyz;
		p = p * viewMatrix;
		p.xy+=a_position.xy;
		p = p * projMatrix;
		gl_Position = p;
		v_texcoord = a_texcoord;
		v_normal = (vec4(a_normal,0.0)*worldMatrix).xyz;
	}
}